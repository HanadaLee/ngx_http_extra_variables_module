diff --git a/src/http/ngx_http_header_filter_module.c b/src/http/ngx_http_header_filter_module.c
index ca13f2a..0bfea99 100644
--- a/src/http/ngx_http_header_filter_module.c
+++ b/src/http/ngx_http_header_filter_module.c
@@ -167,6 +167,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
     ngx_connection_t          *c;
     ngx_http_core_loc_conf_t  *clcf;
     ngx_http_core_srv_conf_t  *cscf;
+    ngx_time_t                *tp;
     u_char                     addr[NGX_SOCKADDR_STRLEN];
 
     if (r->header_sent) {
@@ -175,6 +176,10 @@ ngx_http_header_filter(ngx_http_request_t *r)
 
     r->header_sent = 1;
 
+    tp = ngx_timeofday();
+    r->header_sent_sec = tp->sec;
+    r->header_sent_msec = tp->msec;
+
     if (r != r->main) {
         return NGX_OK;
     }
diff --git a/src/http/ngx_http_request.h b/src/http/ngx_http_request.h
index b1269d2..7d8ee47 100644
--- a/src/http/ngx_http_request.h
+++ b/src/http/ngx_http_request.h
@@ -404,6 +404,8 @@ struct ngx_http_request_s {
     time_t                            lingering_time;
     time_t                            start_sec;
     ngx_msec_t                        start_msec;
+    time_t                            header_sent_sec;
+    ngx_msec_t                        header_sent_msec;
 
     ngx_uint_t                        method;
     ngx_uint_t                        http_version;
diff --git a/src/http/ngx_http_upstream.c b/src/http/ngx_http_upstream.c
index 04d813a..e007502 100644
--- a/src/http/ngx_http_upstream.c
+++ b/src/http/ngx_http_upstream.c
@@ -1525,6 +1525,7 @@ ngx_http_upstream_connect(ngx_http_request_t *r, ngx_http_upstream_t *u)
     r->connection->log->action = "connecting to upstream";
 
     if (u->state && u->state->response_time == (ngx_msec_t) -1) {
+        u->state->response_msec = ngx_current_msec;
         u->state->response_time = ngx_current_msec - u->start_time;
     }
 
@@ -1539,6 +1540,12 @@ ngx_http_upstream_connect(ngx_http_request_t *r, ngx_http_upstream_t *u)
 
     u->start_time = ngx_current_msec;
 
+    u->state->connect_start_msec = ngx_current_msec;
+    u->state->connect_end_msec = (ngx_msec_t) -1;
+    u->state->send_start_msec = (ngx_msec_t) -1;
+    u->state->send_end_msec = (ngx_msec_t) -1;
+    u->state->header_msec = (ngx_msec_t) -1;
+    u->state->response_msec = (ngx_msec_t) -1;
     u->state->response_time = (ngx_msec_t) -1;
     u->state->connect_time = (ngx_msec_t) -1;
     u->state->header_time = (ngx_msec_t) -1;
@@ -2082,9 +2089,12 @@ ngx_http_upstream_send_request(ngx_http_request_t *r, ngx_http_upstream_t *u,
                    "http upstream send request");
 
     if (u->state->connect_time == (ngx_msec_t) -1) {
+        u->state->connect_end_msec = ngx_current_msec;
         u->state->connect_time = ngx_current_msec - u->start_time;
     }
 
+        u->state->send_start_msec = ngx_current_msec;
+
     if (!u->request_sent && ngx_http_upstream_test_connect(c) != NGX_OK) {
         ngx_http_upstream_next(r, u, NGX_HTTP_UPSTREAM_FT_ERROR);
         return;
@@ -2143,6 +2153,8 @@ ngx_http_upstream_send_request(ngx_http_request_t *r, ngx_http_upstream_t *u,
         ngx_del_timer(c->write);
     }
 
+    u->state->send_end_msec = ngx_current_msec;
+
     if (c->tcp_nopush == NGX_TCP_NOPUSH_SET) {
         if (ngx_tcp_push(c->fd) == -1) {
             ngx_log_error(NGX_LOG_CRIT, c->log, ngx_socket_errno,
@@ -2497,6 +2509,7 @@ ngx_http_upstream_process_header(ngx_http_request_t *r, ngx_http_upstream_t *u)
 
     /* rc == NGX_OK */
 
+    u->state->header_msec = ngx_current_msec;
     u->state->header_time = ngx_current_msec - u->start_time;
 
     if (u->headers_in.status_n >= NGX_HTTP_SPECIAL_RESPONSE) {
@@ -4441,6 +4454,7 @@ ngx_http_upstream_finalize_request(ngx_http_request_t *r,
     }
 
     if (u->state && u->state->response_time == (ngx_msec_t) -1) {
+        u->state->response_msec = ngx_current_msec;
         u->state->response_time = ngx_current_msec - u->start_time;
 
         if (u->pipe && u->pipe->read_length) {
diff --git a/src/http/ngx_http_upstream.h b/src/http/ngx_http_upstream.h
index a385222..a21ee7b 100644
--- a/src/http/ngx_http_upstream.h
+++ b/src/http/ngx_http_upstream.h
@@ -62,6 +62,12 @@ typedef struct {
     ngx_msec_t                       connect_time;
     ngx_msec_t                       header_time;
     ngx_msec_t                       queue_time;
+    ngx_msec_t                       connect_start_msec;
+    ngx_msec_t                       connect_end_msec;
+    ngx_msec_t                       send_start_msec;
+    ngx_msec_t                       send_end_msec;
+    ngx_msec_t                       header_msec;
+    ngx_msec_t                       response_msec;
     off_t                            response_length;
     off_t                            bytes_received;
     off_t                            bytes_sent;
diff --git a/src/http/v2/ngx_http_v2_filter_module.c b/src/http/v2/ngx_http_v2_filter_module.c
index 3b9a5bd..906faa2 100644
--- a/src/http/v2/ngx_http_v2_filter_module.c
+++ b/src/http/v2/ngx_http_v2_filter_module.c
@@ -146,6 +146,7 @@ ngx_http_v2_header_filter(ngx_http_request_t *r)
     ngx_http_v2_connection_t  *h2c;
     ngx_http_core_loc_conf_t  *clcf;
     ngx_http_core_srv_conf_t  *cscf;
+    ngx_time_t                *tp;
     u_char                     addr[NGX_SOCKADDR_STRLEN];
 
     static const u_char nginx[8] = "\x87\x3d\x65\xaa\xc2\xa1\x3e\xbf";
@@ -176,6 +177,10 @@ ngx_http_v2_header_filter(ngx_http_request_t *r)
 
     r->header_sent = 1;
 
+    tp = ngx_timeofday();
+    r->header_sent_sec = tp->sec;
+    r->header_sent_msec = tp->msec;
+
     if (r != r->main) {
         return NGX_OK;
     }
